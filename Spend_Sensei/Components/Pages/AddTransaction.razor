@page "/add-transaction"
@inject Spend_Sensei.Services.TransactionService TransactionService
@using Spend_Sensei.Models

<h1>Add Transaction</h1>

<form class="transaction-form">
    <!-- Transaction Type -->
    <div>
        <label>Type:</label>
        <select @bind="newTransaction.Type" class="form-control">
            <option value="">-- Select Type --</option>
            <option value="Inflow">Inflow</option>
            <option value="Outflow">Outflow</option>
            <option value="Debt">Debt</option>
        </select>
    </div>
    @if (!string.IsNullOrEmpty(errorMessageType))
    {
        <p class="error-message">@errorMessageType</p>
    }

    <!-- Amount -->
    <div>
        <label>Amount:</label>
        <input type="number" @bind="newTransaction.Amount" class="form-control" />
    </div>
    @if (!string.IsNullOrEmpty(errorMessageAmount))
    {
        <p class="error-message">@errorMessageAmount</p>
    }

    <!-- Date -->
    <div>
        <label>Date:</label>
        <input type="date" @bind="newTransaction.Date" class="form-control" />
    </div>

    <!-- Tags -->
    <div>
        <label>Tags:</label>
        <select @bind="selectedTag" class="form-control">
            <option value="Food">Food</option>
            <option value="Shopping">Shopping</option>
            <option value="Entertainment">Entertainment</option>
            <option value="Others">Others</option>
        </select>
        @if (selectedTag == "Others")
        {
            <input type="text" @bind="customTag" class="form-control" placeholder="Enter custom tag" />
        }
    </div>

    <button @onclick="ValidateAndAddTransaction" class="btn btn-primary">Add Transaction</button>
</form>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="success-message">@errorMessage</p>
}

@code {
    private Transaction newTransaction = new Transaction();
    private string errorMessage = "";
    private string errorMessageType = "";
    private string errorMessageAmount = "";
    private string selectedTag = "Food"; // Default to the first predefined tag
    private string customTag = "";

    private void ValidateAndAddTransaction()
    {
        errorMessage = "";
        errorMessageType = "";
        errorMessageAmount = "";

        // Validate Type
        if (string.IsNullOrEmpty(newTransaction.Type))
        {
            errorMessageType = "Please select a transaction type.";
        }

        // Validate Amount
        if (newTransaction.Amount <= 0)
        {
            errorMessageAmount = "Amount must be greater than zero.";
        }

        if (string.IsNullOrEmpty(errorMessageType) && string.IsNullOrEmpty(errorMessageAmount))
        {
            // Set the final tag
            newTransaction.Tags = selectedTag == "Others" && !string.IsNullOrEmpty(customTag) ? customTag : selectedTag;

            // Add the transaction
            TransactionService.AddTransaction(newTransaction);

            // Reset the form
            newTransaction = new Transaction();
            selectedTag = "Food";
            customTag = "";
            errorMessage = "Transaction added successfully!";
        }
    }
}
